"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[787],{6046:(e,t,a)=>{var s=a(6658);a.o(s,"usePathname")&&a.d(t,{usePathname:function(){return s.usePathname}}),a.o(s,"useRouter")&&a.d(t,{useRouter:function(){return s.useRouter}})},6787:(e,t,a)=>{a.d(t,{A:()=>k});var s=a(5155),r=a(2115),o=a(8173),i=a.n(o),n=a(6046);let l=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),c=e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,(e,t,a)=>a?a.toUpperCase():t.toLowerCase()),d=e=>{let t=c(e);return t.charAt(0).toUpperCase()+t.slice(1)},m=function(){for(var e=arguments.length,t=Array(e),a=0;a<e;a++)t[a]=arguments[a];return t.filter((e,t,a)=>!!e&&""!==e.trim()&&a.indexOf(e)===t).join(" ").trim()},h=e=>{for(let t in e)if(t.startsWith("aria-")||"role"===t||"title"===t)return!0};var u={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};let g=(0,r.forwardRef)((e,t)=>{let{color:a="currentColor",size:s=24,strokeWidth:o=2,absoluteStrokeWidth:i,className:n="",children:l,iconNode:c,...d}=e;return(0,r.createElement)("svg",{ref:t,...u,width:s,height:s,stroke:a,strokeWidth:i?24*Number(o)/Number(s):o,className:m("lucide",n),...!l&&!h(d)&&{"aria-hidden":"true"},...d},[...c.map(e=>{let[t,a]=e;return(0,r.createElement)(t,a)}),...Array.isArray(l)?l:[l]])}),p=(e,t)=>{let a=(0,r.forwardRef)((a,s)=>{let{className:o,...i}=a;return(0,r.createElement)(g,{ref:s,iconNode:t,className:m("lucide-".concat(l(d(e))),"lucide-".concat(e),o),...i})});return a.displayName=d(e),a},x=p("bell",[["path",{d:"M10.268 21a2 2 0 0 0 3.464 0",key:"vwvbt9"}],["path",{d:"M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326",key:"11g9vi"}]]),f=p("check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]),w=p("x",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]);var v=a(7829);let y=e=>{let{user:t}=e,[a,o]=(0,r.useState)([]),[i,n]=(0,r.useState)(0),[l,c]=(0,r.useState)(!1);(0,r.useEffect)(()=>{t&&d()},[t]);let d=async()=>{try{let e=await v.A.getNotifications();o(e.notifications);let t=e.notifications.filter(e=>!e.isRead).length;n(t)}catch(e){console.error("Error fetching notifications:",e)}},m=async e=>{try{await v.A.markNotificationAsRead(e),o(a.map(t=>t.id===e?{...t,isRead:!0}:t)),n(i-1)}catch(e){console.error("Error marking notification as read:",e)}},h=async()=>{try{await v.A.markAllNotificationsAsRead(),o(a.map(e=>({...e,isRead:!0}))),n(0)}catch(e){console.error("Error marking all notifications as read:",e)}},u=async e=>{try{o(a.filter(t=>t.id!==e)),a.find(t=>t.id===e&&!t.isRead)&&n(i-1)}catch(e){console.error("Error deleting notification:",e)}},g=e=>{switch(e){case"room_status":return"\uD83D\uDECF️";case"request_status":return"\uD83D\uDCCB";case"new_request":return"\uD83C\uDD95";default:return"\uD83D\uDD14"}};return(0,s.jsxs)("div",{className:"relative",children:[(0,s.jsxs)("button",{onClick:()=>c(!l),className:"relative p-2 text-gray-600 hover:text-gray-900 focus:outline-none",children:[(0,s.jsx)(x,{className:"h-6 w-6"}),i>0&&(0,s.jsx)("span",{className:"absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-red-500 rounded-full",children:i})]}),l&&(0,s.jsxs)("div",{className:"absolute right-0 mt-2 w-80 bg-white rounded-md shadow-lg z-50",children:[(0,s.jsx)("div",{className:"p-4 border-b border-gray-200",children:(0,s.jsxs)("div",{className:"flex justify-between items-center",children:[(0,s.jsx)("h3",{className:"text-lg font-medium text-gray-900",children:"Notifications"}),i>0&&(0,s.jsx)("button",{onClick:h,className:"text-sm text-blue-600 hover:text-blue-800",children:"Mark all as read"})]})}),(0,s.jsx)("div",{className:"max-h-96 overflow-y-auto",children:0===a.length?(0,s.jsx)("div",{className:"p-4 text-center text-gray-500",children:"No notifications"}):a.map(e=>(0,s.jsx)("div",{className:"p-4 border-b border-gray-200 ".concat(e.isRead?"":"bg-blue-50"),children:(0,s.jsxs)("div",{className:"flex justify-between",children:[(0,s.jsxs)("div",{className:"flex items-start",children:[(0,s.jsx)("span",{className:"text-lg mr-2",children:g(e.type)}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"font-medium text-gray-900",children:e.title}),(0,s.jsx)("p",{className:"text-sm text-gray-500",children:e.message}),(0,s.jsx)("p",{className:"text-xs text-gray-400 mt-1",children:new Date(e.createdAt).toLocaleString()})]})]}),(0,s.jsxs)("div",{className:"flex space-x-1",children:[!e.isRead&&(0,s.jsx)("button",{onClick:()=>m(e.id),className:"text-gray-400 hover:text-green-500",title:"Mark as read",children:(0,s.jsx)(f,{className:"h-4 w-4"})}),(0,s.jsx)("button",{onClick:()=>u(e.id),className:"text-gray-400 hover:text-red-500",title:"Delete",children:(0,s.jsx)(w,{className:"h-4 w-4"})})]})]})},e.id))})]})]})},k=e=>{let{user:t,onLogout:a}=e,o=(0,n.usePathname)(),[l,c]=(0,r.useState)(!1),d=[{name:"Dashboard",href:"/dashboard",icon:"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"},{name:"Rooms",href:"/rooms",icon:"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"},{name:"Requests",href:"/requests",icon:"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"},{name:"Staff",href:"/staff",icon:"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"},{name:"Inventory",href:"/inventory",icon:"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"},{name:"Analytics",href:"/analytics",icon:"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"},{name:"Departments",href:"/departments",icon:"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4"}];return(0,s.jsx)("header",{className:"bg-white shadow",children:(0,s.jsxs)("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[(0,s.jsxs)("div",{className:"flex justify-between items-center py-4",children:[(0,s.jsx)("div",{className:"flex items-center",children:(0,s.jsxs)(i(),{href:"/dashboard",className:"text-2xl font-bold text-slate-800 flex items-center",children:[(0,s.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-8 w-8 text-teal-600 mr-2",viewBox:"0 0 20 20",fill:"currentColor",children:(0,s.jsx)("path",{d:"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"})}),"HotelOps"]})}),(0,s.jsx)("nav",{className:"hidden md:flex space-x-8",children:d.map(e=>(0,s.jsxs)(i(),{href:e.href,className:"".concat(o===e.href?"text-teal-600 border-b-2 border-teal-600":"text-slate-600 hover:text-teal-600"," px-1 py-2 text-sm font-medium transition duration-300 flex items-center"),children:[(0,s.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-4 w-4 mr-1",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",children:(0,s.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:e.icon})}),e.name]},e.name))}),(0,s.jsxs)("div",{className:"flex items-center space-x-4",children:[(0,s.jsx)(y,{user:t}),(0,s.jsxs)("div",{className:"relative group",children:[(0,s.jsxs)("button",{className:"flex items-center text-sm font-medium text-slate-700 hover:text-slate-900",children:[(0,s.jsx)("span",{className:"mr-2",children:(null==t?void 0:t.name)||"User"}),(0,s.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-5 w-5",viewBox:"0 0 20 20",fill:"currentColor",children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",clipRule:"evenodd"})})]}),(0,s.jsx)("div",{className:"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 hidden group-hover:block z-50",children:(0,s.jsx)("button",{onClick:a,className:"block w-full text-left px-4 py-2 text-sm text-slate-700 hover:bg-slate-100",children:"Logout"})})]}),(0,s.jsx)("button",{className:"md:hidden text-slate-600 hover:text-slate-900",onClick:()=>c(!l),children:(0,s.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-6 w-6",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",children:(0,s.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M4 6h16M4 12h16M4 18h16"})})})]})]}),l&&(0,s.jsx)("div",{className:"md:hidden py-4 border-t border-slate-200",children:(0,s.jsx)("nav",{className:"flex flex-col space-y-2",children:d.map(e=>(0,s.jsxs)(i(),{href:e.href,className:"".concat(o===e.href?"text-teal-600 bg-teal-50":"text-slate-600"," px-3 py-2 rounded-md text-base font-medium flex items-center"),onClick:()=>c(!1),children:[(0,s.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-5 w-5 mr-2",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",children:(0,s.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:e.icon})}),e.name]},e.name))})})]})})}},7829:(e,t,a)=>{a.d(t,{A:()=>s});let s=new class{getMockDashboardStats(){return Promise.resolve({pendingRequests:12,occupiedRooms:42,availableRooms:8,totalStaff:24,guestSatisfaction:94,revenue:12500})}getMockRecentActivity(){return Promise.resolve([{id:1,type:"request",title:"New request created",description:"John Doe - Extra towels (Room 205)",time:"2 minutes ago"},{id:2,type:"room",title:"Room status updated",description:"Room 103 marked as Clean",time:"1 hour ago"},{id:3,type:"request",title:"Request completed",description:"Room service delivered to Room 102",time:"15 minutes ago"},{id:4,type:"maintenance",title:"Maintenance request",description:"Leaky faucet reported in Room 302",time:"2 hours ago"}])}getMockNotifications(){return Promise.resolve([{id:1,title:"New guest request",message:"John Doe needs extra towels in Room 205",time:"2 minutes ago",read:!1},{id:2,title:"Room status updated",message:"Room 103 has been marked as Clean",time:"1 hour ago",read:!1},{id:3,title:"Maintenance required",message:"Leaky faucet reported in Room 302",time:"2 hours ago",read:!0}])}async login(e,t){if(this.useMockData)return await new Promise(e=>setTimeout(e,500)),Promise.resolve({user:{id:1,name:"Admin User",email:e,role:"admin"},token:"mock-jwt-token"});try{return(await fetch("".concat(this.baseUrl,"/auth/login"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})})).json()}catch(t){return Promise.resolve({user:{id:1,name:"Admin User",email:e,role:"admin"},token:"mock-jwt-token"})}}async getDashboardStats(){if(this.useMockData)return await new Promise(e=>setTimeout(e,300)),this.getMockDashboardStats();try{return(await fetch("".concat(this.baseUrl,"/dashboard/stats"),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(e){return this.getMockDashboardStats()}}async getRecentActivity(){if(this.useMockData)return await new Promise(e=>setTimeout(e,300)),this.getMockRecentActivity();try{return(await fetch("".concat(this.baseUrl,"/dashboard/activity"),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(e){return this.getMockRecentActivity()}}async getAllRooms(){if(this.useMockData){await new Promise(e=>setTimeout(e,300));let e=localStorage.getItem("hotelRooms");return e?Promise.resolve(JSON.parse(e)):Promise.resolve([{id:101,status:"clean",lastUpdated:"2 hours ago"},{id:102,status:"dirty",lastUpdated:"5 hours ago"},{id:103,status:"inspected",lastUpdated:"1 day ago"},{id:104,status:"dirty",lastUpdated:"3 hours ago"}])}try{return(await fetch("".concat(this.baseUrl,"/rooms"),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(e){return Promise.resolve([{id:101,status:"clean",lastUpdated:"2 hours ago"},{id:102,status:"dirty",lastUpdated:"5 hours ago"},{id:103,status:"inspected",lastUpdated:"1 day ago"},{id:104,status:"dirty",lastUpdated:"3 hours ago"}])}}async getRoomById(e){if(this.useMockData)return await new Promise(e=>setTimeout(e,300)),Promise.resolve({id:e,status:"clean",lastUpdated:"2 hours ago"});try{return(await fetch("".concat(this.baseUrl,"/rooms/").concat(e),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(t){return Promise.resolve({id:e,status:"clean",lastUpdated:"2 hours ago"})}}async updateRoomStatus(e,t,a){if(this.useMockData){await new Promise(e=>setTimeout(e,500));let a=localStorage.getItem("hotelRooms"),s=a?JSON.parse(a):[{id:101,status:"clean",lastUpdated:"2 hours ago"},{id:102,status:"dirty",lastUpdated:"5 hours ago"},{id:103,status:"inspected",lastUpdated:"1 day ago"},{id:104,status:"dirty",lastUpdated:"3 hours ago"}],r=s.findIndex(t=>t.id===e);return -1!==r&&(s[r]={...s[r],status:t,lastUpdated:"Just now"},localStorage.setItem("hotelRooms",JSON.stringify(s))),Promise.resolve({id:e,status:t,lastUpdated:"Just now"})}try{return(await fetch("".concat(this.baseUrl,"/rooms/").concat(e,"/status"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("token"))},body:JSON.stringify({status:t,userId:a})})).json()}catch(a){return Promise.resolve({id:e,status:t,lastUpdated:"Just now"})}}async getAllRequests(){if(this.useMockData){await new Promise(e=>setTimeout(e,300));let e=localStorage.getItem("hotelRequests");return e?Promise.resolve(JSON.parse(e)):Promise.resolve([{id:1,guest:"John Doe",room:205,request:"Extra towels",priority:"medium",status:"pending"},{id:2,guest:"Jane Smith",room:102,request:"Room service",priority:"high",status:"in-progress"},{id:3,guest:"Robert Johnson",room:302,request:"Maintenance",priority:"low",status:"completed"}])}try{return(await fetch("".concat(this.baseUrl,"/requests"),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(e){return Promise.resolve([{id:1,guest:"John Doe",room:205,request:"Extra towels",priority:"medium",status:"pending"},{id:2,guest:"Jane Smith",room:102,request:"Room service",priority:"high",status:"in-progress"},{id:3,guest:"Robert Johnson",room:302,request:"Maintenance",priority:"low",status:"completed"}])}}async getRequestsByDepartment(e){if(this.useMockData)return await new Promise(e=>setTimeout(e,300)),Promise.resolve([]);try{return(await fetch("".concat(this.baseUrl,"/requests/department/").concat(e),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(e){return Promise.resolve([])}}async createRequest(e){if(this.useMockData){await new Promise(e=>setTimeout(e,500));let t=localStorage.getItem("hotelRequests"),a=t?JSON.parse(t):[{id:1,guest:"John Doe",room:205,request:"Extra towels",priority:"medium",status:"pending"},{id:2,guest:"Jane Smith",room:102,request:"Room service",priority:"high",status:"in-progress"},{id:3,guest:"Robert Johnson",room:302,request:"Maintenance",priority:"low",status:"completed"}],s={id:Date.now(),...e,status:"pending"};return a.push(s),localStorage.setItem("hotelRequests",JSON.stringify(a)),Promise.resolve(s)}try{return(await fetch("".concat(this.baseUrl,"/requests"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("token"))},body:JSON.stringify(e)})).json()}catch(t){return Promise.resolve({id:Date.now(),...e,status:"pending"})}}async updateRequestStatus(e,t,a){if(this.useMockData){await new Promise(e=>setTimeout(e,500));let a=localStorage.getItem("hotelRequests"),s=a?JSON.parse(a):[{id:1,guest:"John Doe",room:205,request:"Extra towels",priority:"medium",status:"pending"},{id:2,guest:"Jane Smith",room:102,request:"Room service",priority:"high",status:"in-progress"},{id:3,guest:"Robert Johnson",room:302,request:"Maintenance",priority:"low",status:"completed"}],r=s.findIndex(t=>t.id===e);return -1!==r&&(s[r]={...s[r],status:t},localStorage.setItem("hotelRequests",JSON.stringify(s))),Promise.resolve({id:e,status:t})}try{return(await fetch("".concat(this.baseUrl,"/requests/").concat(e,"/status"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("token"))},body:JSON.stringify({status:t,userId:a})})).json()}catch(a){return Promise.resolve({id:e,status:t})}}async getNotifications(){if(this.useMockData)return await new Promise(e=>setTimeout(e,300)),this.getMockNotifications();try{return(await fetch("".concat(this.baseUrl,"/notifications"),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(e){return this.getMockNotifications()}}async markNotificationAsRead(e){if(this.useMockData)return await new Promise(e=>setTimeout(e,300)),Promise.resolve({success:!0});try{return(await fetch("".concat(this.baseUrl,"/notifications/").concat(e,"/read"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(e){return Promise.resolve({success:!0})}}async markAllNotificationsAsRead(){if(this.useMockData)return await new Promise(e=>setTimeout(e,300)),Promise.resolve({success:!0});try{return(await fetch("".concat(this.baseUrl,"/notifications/read-all"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("token"))}})).json()}catch(e){return Promise.resolve({success:!0})}}constructor(){this.baseUrl="http://localhost:3001/api",this.useMockData=!0}}}}]);